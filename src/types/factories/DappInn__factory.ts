/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DappInn, DappInnInterface } from "../DappInn";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_roomNumber",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_timeToStay",
        type: "uint8",
      },
    ],
    name: "checkIn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_roomNumber",
        type: "uint8",
      },
    ],
    name: "checkOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTimeStamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfRooms",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roomPriceInWei",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "rooms",
    outputs: [
      {
        internalType: "enum DappInn.RoomStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "guest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "checkoutDate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_numberOfRooms",
        type: "uint8",
      },
    ],
    name: "setNumberOfRooms",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setRoomPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a6000806101000a81548160ff021916908360ff160217905550606460015534801561003057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506112eb806100816000396000f3fe60806040526004361061009c5760003560e01c8063853828b611610064578063853828b6146101865780638da5cb5b1461019d57806399d568b3146101c8578063b69ef8a8146101f3578063d3c0a6a21461021e578063da235b221461023a5761009c565b80630fb15cc6146100a1578063113d8875146100e057806333258750146101095780637b5212691461013457806382cb93f51461015d575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190610bfc565b610265565b6040516100d793929190610f1e565b60405180910390f35b3480156100ec57600080fd5b5061010760048036038101906101029190610bfc565b6102bc565b005b34801561011557600080fd5b5061011e610369565b60405161012b9190611075565b60405180910390f35b34801561014057600080fd5b5061015b60048036038101906101569190610bfc565b61036f565b005b34801561016957600080fd5b50610184600480360381019061017f9190610bd3565b6105df565b005b34801561019257600080fd5b5061019b6106bc565b005b3480156101a957600080fd5b506101b26107d8565b6040516101bf9190610f03565b60405180910390f35b3480156101d457600080fd5b506101dd6107fe565b6040516101ea9190611090565b60405180910390f35b3480156101ff57600080fd5b5061020861080f565b6040516102159190611075565b60405180910390f35b61023860048036038101906102339190610c25565b6108a7565b005b34801561024657600080fd5b5061024f610ba1565b60405161025c9190611075565b60405180910390f35b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905083565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034390611035565b60405180910390fd5b806000806101000a81548160ff021916908360ff16021790555050565b60015481565b3373ffffffffffffffffffffffffffffffffffffffff16600360008360ff1660ff16815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610419576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041090610f75565b60405180910390fd5b600180811115610452577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600360008360ff1660ff16815260200190815260200160002060000160009054906101000a900460ff1660018111156104b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146104f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104eb90611015565b60405180910390fd5b6000600360008360ff1660ff16815260200190815260200160002060000160006101000a81548160ff0219169083600181111561055a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506000600360008360ff1660ff16815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600360008360ff1660ff1681526020019081526020016000206001018190555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461066f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066690611035565b60405180910390fd5b600081116106b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a990610fb5565b60405180910390fd5b8060018190555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461074c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074390611035565b60405180910390fd5b6000471161078f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078690611055565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156107d5573d6000803e3d6000fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900460ff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089890611035565b60405180910390fd5b47905090565b60008160ff16116108ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e490610fd5565b60405180910390fd5b8060ff166001546108fe9190611112565b341015610940576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093790610f55565b60405180910390fd5b60008054906101000a900460ff1660ff168260ff1610610995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098c90610f95565b60405180910390fd5b600360008360ff1660ff16815260200190815260200160002060010154421115610a9657600060018111156109f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600360008460ff1660ff16815260200190815260200160002060000160009054906101000a900460ff166001811115610a55577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c90610ff5565b60405180910390fd5b5b6001600360008460ff1660ff16815260200190815260200160002060000160006101000a81548160ff02191690836001811115610afc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555033600360008460ff1660ff16815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000816001610b6b919061116c565b60ff1642610b7991906110bc565b905080600360008560ff1660ff16815260200190815260200160002060010181905550505050565b600042905090565b600081359050610bb881611287565b92915050565b600081359050610bcd8161129e565b92915050565b600060208284031215610be557600080fd5b6000610bf384828501610ba9565b91505092915050565b600060208284031215610c0e57600080fd5b6000610c1c84828501610bbe565b91505092915050565b60008060408385031215610c3857600080fd5b6000610c4685828601610bbe565b9250506020610c5785828601610bbe565b9150509250929050565b610c6a816111a7565b82525050565b610c7981611203565b82525050565b6000610c8c6010836110ab565b91507f4e6f7420656e6f756768206d6f6e6579000000000000000000000000000000006000830152602082019050919050565b6000610ccc6017836110ab565b91507f796f7520617265206e6f7420696e2074686520726f6f6d0000000000000000006000830152602082019050919050565b6000610d0c6019836110ab565b91507f5468697320726f6f6d20646f6573206e6f7420657869737473000000000000006000830152602082019050919050565b6000610d4c601b836110ab565b91507f4d6f6e657920646f65736e27742067726f77206f6e20747265657300000000006000830152602082019050919050565b6000610d8c6024836110ab565b91507f596f75206861766520746f2073746179206174206c65617374206f6e6520706560008301527f72696f64000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610df26015836110ab565b91507f5468697320726f6f6d206973206f6363757069656400000000000000000000006000830152602082019050919050565b6000610e326019836110ab565b91507f5468697320726f6f6d206973206e6f74206f63637570696564000000000000006000830152602082019050919050565b6000610e726009836110ab565b91507f4e6f74206f776e657200000000000000000000000000000000000000000000006000830152602082019050919050565b6000610eb26013836110ab565b91507f49276d2062726f6b652c20736f7272792e2e2e000000000000000000000000006000830152602082019050919050565b610eee816111ec565b82525050565b610efd816111f6565b82525050565b6000602082019050610f186000830184610c61565b92915050565b6000606082019050610f336000830186610c70565b610f406020830185610c61565b610f4d6040830184610ee5565b949350505050565b60006020820190508181036000830152610f6e81610c7f565b9050919050565b60006020820190508181036000830152610f8e81610cbf565b9050919050565b60006020820190508181036000830152610fae81610cff565b9050919050565b60006020820190508181036000830152610fce81610d3f565b9050919050565b60006020820190508181036000830152610fee81610d7f565b9050919050565b6000602082019050818103600083015261100e81610de5565b9050919050565b6000602082019050818103600083015261102e81610e25565b9050919050565b6000602082019050818103600083015261104e81610e65565b9050919050565b6000602082019050818103600083015261106e81610ea5565b9050919050565b600060208201905061108a6000830184610ee5565b92915050565b60006020820190506110a56000830184610ef4565b92915050565b600082825260208201905092915050565b60006110c7826111ec565b91506110d2836111ec565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561110757611106611215565b5b828201905092915050565b600061111d826111ec565b9150611128836111ec565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561116157611160611215565b5b828202905092915050565b6000611177826111f6565b9150611182836111f6565b92508160ff048311821515161561119c5761119b611215565b5b828202905092915050565b60006111b2826111cc565b9050919050565b60008190506111c782611273565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061120e826111b9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061128457611283611244565b5b50565b611290816111ec565b811461129b57600080fd5b50565b6112a7816111f6565b81146112b257600080fd5b5056fea2646970667358221220422116f8cf1cbc1c98278b106545638d232d5464dc935cbc272be7adbcd3944a64736f6c63430008000033";

export class DappInn__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DappInn> {
    return super.deploy(overrides || {}) as Promise<DappInn>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DappInn {
    return super.attach(address) as DappInn;
  }
  connect(signer: Signer): DappInn__factory {
    return super.connect(signer) as DappInn__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DappInnInterface {
    return new utils.Interface(_abi) as DappInnInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DappInn {
    return new Contract(address, _abi, signerOrProvider) as DappInn;
  }
}
