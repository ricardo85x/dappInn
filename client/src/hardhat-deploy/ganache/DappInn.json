{
  "address": "0x4867E61F20b681e4C2c91b4CDd38eC5e6a13a310",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_serviceNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "addRoomServiceEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_service",
          "type": "string"
        }
      ],
      "name": "buyRoomServiceEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_roomNumber",
          "type": "uint8"
        }
      ],
      "name": "checkInEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_roomNumber",
          "type": "uint8"
        }
      ],
      "name": "checkOutEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoomPriceEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_numberOfRooms",
          "type": "uint8"
        }
      ],
      "name": "setNumberOfRoomsEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_roomNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setRoomPriceEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_serviceNumber",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "updateRoomServiceEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawAllEvent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "addRoomService",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_roomNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_serviceNumber",
          "type": "uint8"
        }
      ],
      "name": "buyRoomService",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_roomNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_timeToStay",
          "type": "uint256"
        }
      ],
      "name": "checkIn",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_roomNumber",
          "type": "uint8"
        }
      ],
      "name": "checkOut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultRoomPriceInWei",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_roomNumber",
          "type": "uint8"
        }
      ],
      "name": "getRoomTab",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "enabled",
              "type": "bool"
            }
          ],
          "internalType": "struct DappInn.RoomService[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfRooms",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfServices",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "roomService",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "rooms",
      "outputs": [
        {
          "internalType": "enum DappInn.RoomStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "guest",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "checkoutDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoomPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_numberOfRooms",
          "type": "uint8"
        }
      ],
      "name": "setNumberOfRooms",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_roomNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setRoomPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_serviceNumber",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_enabled",
          "type": "bool"
        }
      ],
      "name": "updateRoomService",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe741b17c7b049a838c3bc62831188b077544184e62be6633db88d6f532891429",
  "receipt": {
    "to": null,
    "from": "0x7A6ae83d3029042B69e481a30512e672E678eff8",
    "contractAddress": "0x4867E61F20b681e4C2c91b4CDd38eC5e6a13a310",
    "transactionIndex": 0,
    "gasUsed": "2568212",
    "logsBloom": "0x
    "blockHash": "0x441d29c1eb6e96ac80c4fe11ad2fdffb19069bf416dae023c05b2ba83c94c15e",
    "transactionHash": "0xe741b17c7b049a838c3bc62831188b077544184e62be6633db88d6f532891429",
    "logs": [],
    "blockNumber": 449,
    "cumulativeGasUsed": "2568212",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "76ccee3373df3050c2ac1b3de34984bd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_serviceNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"addRoomServiceEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_service\",\"type\":\"string\"}],\"name\":\"buyRoomServiceEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_roomNumber\",\"type\":\"uint8\"}],\"name\":\"checkInEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_roomNumber\",\"type\":\"uint8\"}],\"name\":\"checkOutEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoomPriceEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_numberOfRooms\",\"type\":\"uint8\"}],\"name\":\"setNumberOfRoomsEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_roomNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setRoomPriceEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_serviceNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"updateRoomServiceEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAllEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"addRoomService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_roomNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_serviceNumber\",\"type\":\"uint8\"}],\"name\":\"buyRoomService\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_roomNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_timeToStay\",\"type\":\"uint256\"}],\"name\":\"checkIn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_roomNumber\",\"type\":\"uint8\"}],\"name\":\"checkOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultRoomPriceInWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_roomNumber\",\"type\":\"uint8\"}],\"name\":\"getRoomTab\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"internalType\":\"struct DappInn.RoomService[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfRooms\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfServices\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"roomService\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"rooms\",\"outputs\":[{\"internalType\":\"enum DappInn.RoomStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"guest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"checkoutDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoomPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_numberOfRooms\",\"type\":\"uint8\"}],\"name\":\"setNumberOfRooms\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_roomNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setRoomPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_serviceNumber\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"updateRoomService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ricardo85x\",\"details\":\"allow users to rent a room in the dApp Inn. \",\"kind\":\"dev\",\"methods\":{\"addRoomService(string,uint256)\":{\"details\":\"add a service so guest can buy it.\"},\"balance()\":{\"returns\":{\"_0\":\"the balance in this smart contract.\"}},\"checkOut(uint8)\":{\"details\":\"no money back!\"},\"constructor\":{\"details\":\"consider using openzeppelin Owener contract\"},\"getRoomTab(uint8)\":{\"details\":\"I could not directly use rooms[num].tab from etherjs So I created this function.\",\"returns\":{\"_0\":\"rooms'tab.\"}},\"getTimeStamp()\":{\"returns\":{\"_0\":\"current timestamp.\"}},\"setNumberOfRooms(uint8)\":{\"details\":\"please verifify manualy if the room is empty before continue.\"},\"setRoomPrice(uint8,uint256)\":{\"details\":\"set price to zero when you want to use defaultRoomPriceInWei.\"},\"updateRoomService(uint8,string,uint256,bool)\":{\"details\":\"update a service.\"}},\"title\":\"Dapp Inn \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyRoomService(uint8,uint8)\":{\"notice\":\"buy a service to make your stay more happy.\"},\"checkIn(uint8,uint256)\":{\"notice\":\"check in the room.\"},\"checkOut(uint8)\":{\"notice\":\"checkout the user before the checkoutDate.\"},\"setDefaultRoomPrice(uint256)\":{\"notice\":\"set the defaut room price.\"},\"setNumberOfRooms(uint8)\":{\"notice\":\"set the number of rooms available to rent.\"},\"setRoomPrice(uint8,uint256)\":{\"notice\":\"set Rooms price.\"},\"withdrawAll()\":{\"notice\":\"withdraw all funds.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DappInn.sol\":\"DappInn\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DappInn.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @title Dapp Inn \\n/// @author ricardo85x\\n/// @dev allow users to rent a room in the dApp Inn. \\ncontract DappInn {\\n\\n    enum RoomStatus { Vacant, Occupied }\\n\\n    uint8 public numberOfRooms = 10;\\n\\n    uint public defaultRoomPriceInWei = 100;\\n\\n    address public owner;\\n\\n    struct Room {\\n        RoomStatus status;\\n        address guest;\\n        uint checkoutDate;\\n        uint price;\\n        RoomService[] tab; // rooms tap, check pad\\n    }\\n\\n    mapping(uint8 => Room) public rooms;\\n\\n    struct RoomService {\\n        string name;\\n        uint price;\\n        bool enabled;\\n    }\\n\\n    uint8 public numberOfServices;\\n\\n    mapping(uint8 => RoomService) public roomService;\\n\\n    /// @dev consider using openzeppelin Owener contract\\n    constructor() {\\n        owner = address(msg.sender);\\n    }\\n\\n    /// @dev consider using openzeppelin Owener contract\\n    modifier onlyOwner {\\n        require(address(msg.sender) == owner, \\\"Not owner\\\");\\n        _;\\n    }\\n\\n    /// @dev check if the room is vaacant.\\n    /// @notice it can become vacant when the checkoutDate expires.\\n    modifier IsVacant(uint8 _roomNumber){\\n        require(_roomNumber < numberOfRooms, \\\"This room does not exists\\\");\\n        // check if the room is occupied when checkoutDate is in the past.\\n        if ( rooms[_roomNumber].checkoutDate > block.timestamp  ) {\\n            require(rooms[_roomNumber].status == RoomStatus.Vacant, \\\"This room is occupied\\\");\\n        }\\n        _;\\n    }\\n\\n    event setRoomPriceEvent(uint8 _roomNumber, uint _price);\\n\\n    /// @notice set Rooms price.\\n    /// @dev set price to zero when you want to use defaultRoomPriceInWei.\\n    function setRoomPrice(uint8 _roomNumber, uint _price) public onlyOwner IsVacant(_roomNumber) {\\n        rooms[_roomNumber].price = _price; \\n\\n        emit setRoomPriceEvent(_roomNumber, _price);\\n    }\\n\\n    event setDefaultRoomPriceEvent(uint _price);\\n\\n\\n    /// @notice set the defaut room price.\\n    function setDefaultRoomPrice(uint _price) public onlyOwner {\\n        require(_price > 0, \\\"Money doesn't grow on trees\\\");\\n        defaultRoomPriceInWei = _price; \\n\\n        emit setDefaultRoomPriceEvent(_price);\\n    }\\n\\n    event setNumberOfRoomsEvent(uint8 _numberOfRooms);\\n\\n    /// @notice set the number of rooms available to rent.\\n    /// @dev please verifify manualy if the room is empty before continue.\\n    function setNumberOfRooms(uint8 _numberOfRooms) public onlyOwner {\\n        numberOfRooms = _numberOfRooms;\\n\\n        emit setNumberOfRoomsEvent(_numberOfRooms);\\n    }\\n\\n\\n    event withdrawAllEvent(uint _amount);\\n\\n\\n    /// @notice withdraw all funds.\\n    function withdrawAll() public onlyOwner {\\n\\n        uint _amount = address(this).balance;\\n        require(_amount > 0, \\\"I'm broke, sorry...\\\");\\n        payable(msg.sender).transfer(_amount);\\n\\n        emit withdrawAllEvent(_amount);\\n\\n    }\\n\\n    /// @return the balance in this smart contract.\\n    function balance() public  onlyOwner view returns (uint) {\\n        return address(this).balance;\\n    }\\n\\n    event checkInEvent(address indexed _address, uint8  _roomNumber);\\n\\n    /// @notice check in the room.\\n    function checkIn(uint8 _roomNumber, uint _timeToStay) public payable {\\n        require(_timeToStay > 0, \\\"You have to stay at least one period\\\");\\n\\n        // if rooms price is zero, set the price to be the defaultRoomPriceInWei\\n        uint actualPrice = rooms[_roomNumber].price;\\n        if (actualPrice == 0){\\n            actualPrice = defaultRoomPriceInWei;\\n        }\\n\\n        require(msg.value >= (actualPrice * _timeToStay), \\\"Not enough money\\\");\\n        require(_roomNumber < numberOfRooms, \\\"This room does not exists\\\");\\n\\n        // check if the room is occupied when checkoutDate is in the past.\\n        if ( rooms[_roomNumber].checkoutDate > block.timestamp ) {\\n            require(rooms[_roomNumber].status == RoomStatus.Vacant, \\\"This room is occupied\\\");\\n        }\\n\\n        rooms[_roomNumber].status = RoomStatus.Occupied;\\n        rooms[_roomNumber].guest = address(msg.sender);\\n\\n        // calculate checkout Date multiplying the _timeToStay by 1 seconds\\n        // plus current timestamp\\n        uint timeToStay = block.timestamp + ((1 seconds) * _timeToStay );\\n        \\n        rooms[_roomNumber].checkoutDate = timeToStay;\\n\\n        // empty current rooms'tab\\n        delete rooms[_roomNumber].tab;\\n\\n        RoomService memory checkInService;\\n        checkInService.name = \\\"stay\\\";\\n        checkInService.price = msg.value;\\n\\n        rooms[_roomNumber].tab.push(checkInService);\\n\\n\\n        emit checkInEvent(msg.sender, _roomNumber);\\n        \\n    }\\n\\n    /// @return current timestamp.\\n    function getTimeStamp() public view returns(uint) {\\n        return block.timestamp;\\n    }\\n\\n    event checkOutEvent(address indexed _address, uint8 _roomNumber);\\n\\n    /// @notice checkout the user before the checkoutDate.\\n    /// @dev no money back!\\n    function checkOut(uint8 _roomNumber) public {\\n\\n        require(rooms[_roomNumber].guest == address(msg.sender), \\\"you are not in the room\\\");\\n        require(rooms[_roomNumber].status == RoomStatus.Occupied, \\\"This room is not occupied\\\");\\n\\n        rooms[_roomNumber].status = RoomStatus.Vacant;\\n        rooms[_roomNumber].guest = address(0);\\n        rooms[_roomNumber].checkoutDate = block.timestamp;\\n\\n        emit checkOutEvent(msg.sender, _roomNumber);\\n\\n    }\\n\\n    event addRoomServiceEvent(uint8  _serviceNumber, string  _name);\\n\\n    /// @dev add a service so guest can buy it.\\n    function addRoomService(string memory _name, uint _price) public onlyOwner {\\n        roomService[numberOfServices].name = _name;\\n        roomService[numberOfServices].price = _price;\\n        roomService[numberOfServices].enabled = true;\\n        emit addRoomServiceEvent(numberOfServices, _name);\\n        numberOfServices++;\\n    }\\n\\n    event updateRoomServiceEvent(uint8  _serviceNumber, string  _name);\\n\\n    /// @dev update a service.\\n    function updateRoomService(uint8 _serviceNumber, string memory _name, uint _price, bool _enabled) public onlyOwner {\\n        require(_serviceNumber < numberOfServices, \\\"This service does not exists\\\");\\n        roomService[_serviceNumber].name = _name;\\n        roomService[_serviceNumber].price = _price;\\n        roomService[_serviceNumber].enabled = _enabled;\\n\\n        emit updateRoomServiceEvent(numberOfServices, _name);\\n\\n    }\\n\\n    event buyRoomServiceEvent(address indexed _address, string _service);\\n\\n\\n    /// @notice buy a service to make your stay more happy.\\n    function buyRoomService(uint8 _roomNumber, uint8 _serviceNumber) public payable {\\n        require(rooms[_roomNumber].guest == address(msg.sender), \\\"you are not in the room\\\");\\n        require(rooms[_roomNumber].checkoutDate > block.timestamp , \\\"Your time is over, please leave the room\\\");\\n        require(_serviceNumber < numberOfServices, \\\"This item does not exists\\\");\\n        require(roomService[_serviceNumber].enabled == true, \\\"This service is unavailable\\\");\\n        require(msg.value >= roomService[_serviceNumber].price, \\\"Not enough money\\\");\\n\\n        rooms[_roomNumber].tab.push(roomService[_serviceNumber]);\\n\\n        emit buyRoomServiceEvent(msg.sender, roomService[_serviceNumber].name);\\n\\n    }\\n\\n    /// @return rooms'tab.\\n    /// @dev I could not directly use rooms[num].tab from etherjs\\n    /// So I created this function.\\n    function getRoomTab(uint8 _roomNumber) public view returns (RoomService[] memory) {\\n        require(rooms[_roomNumber].guest == address(msg.sender), \\\"you are not in the room\\\");\\n        return rooms[_roomNumber].tab;\\n    }\\n\\n}\",\"keccak256\":\"0x9328480451fea584d5ec4f73603d826f7e1ab963a2f9e3d82e588e20684eae2a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101095760003560e01c8063a7505bb911610095578063b8a5adea11610064578063b8a5adea1461033b578063da235b2214610378578063dcf2f728146103a3578063f2a02c1f146103bf578063f4486c21146103e857610109565b8063a7505bb914610291578063b2231103146102bc578063b69ef8a8146102e5578063b71bb6411461031057610109565b80637b521269116100dc5780637b521269146101df578063853828b614610208578063856ab4aa1461021f5780638da5cb5b1461023b57806399d568b31461026657610109565b8063037c3ff91461010e5780630fb15cc614610137578063113d88751461017757806365a50ab3146101a0575b600080fd5b34801561011a57600080fd5b5061013560048036038101906101309190611e3a565b610411565b005b34801561014357600080fd5b5061015e60048036038101906101599190611eb7565b6105d9565b60405161016e94939291906125d0565b60405180910390f35b34801561018357600080fd5b5061019e60048036038101906101999190611eb7565b610636565b005b3480156101ac57600080fd5b506101c760048036038101906101c29190611eb7565b61071a565b6040516101d693929190612615565b60405180910390f35b3480156101eb57600080fd5b5061020660048036038101906102019190611eb7565b6107d9565b005b34801561021457600080fd5b5061021d610a97565b005b61023960048036038101906102349190611f97565b610bf0565b005b34801561024757600080fd5b50610250610f42565b60405161025d9190612593565b60405180910390f35b34801561027257600080fd5b5061027b610f68565b6040516102889190612830565b60405180910390f35b34801561029d57600080fd5b506102a6610f79565b6040516102b39190612815565b60405180910390f35b3480156102c857600080fd5b506102e360048036038101906102de9190611e8e565b610f7f565b005b3480156102f157600080fd5b506102fa611093565b6040516103079190612815565b60405180910390f35b34801561031c57600080fd5b5061032561112b565b6040516103329190612830565b60405180910390f35b34801561034757600080fd5b50610362600480360381019061035d9190611eb7565b61113e565b60405161036f91906125ae565b60405180910390f35b34801561038457600080fd5b5061038d61131a565b60405161039a9190612815565b60405180910390f35b6103bd60048036038101906103b89190611f5b565b611322565b005b3480156103cb57600080fd5b506103e660048036038101906103e19190611f5b565b611798565b005b3480156103f457600080fd5b5061040f600480360381019061040a9190611ee0565b6119de565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049890612795565b60405180910390fd5b8160056000600460009054906101000a900460ff1660ff1660ff16815260200190815260200160002060000190805190602001906104e0929190611b99565b508060056000600460009054906101000a900460ff1660ff1660ff16815260200190815260200160002060010181905550600160056000600460009054906101000a900460ff1660ff1660ff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055507f78a221958619db713073f314ac1a47c01487839af6041eb58e1c1c7d5c2bc400600460009054906101000a900460ff168360405161059592919061284b565b60405180910390a16004600081819054906101000a900460ff16809291906105bc90612b1e565b91906101000a81548160ff021916908360ff160217905550505050565b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905084565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bd90612795565b60405180910390fd5b806000806101000a81548160ff021916908360ff1602179055507fc02e9e68f7ce1c27224fd313765c141a3892595455a87f27f895c1850fa7de2c8160405161070f9190612830565b60405180910390a150565b600560205280600052604060002060009150905080600001805461073d90612aec565b80601f016020809104026020016040519081016040528092919081815260200182805461076990612aec565b80156107b65780601f1061078b576101008083540402835291602001916107b6565b820191906000526020600020905b81548152906001019060200180831161079957829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16905083565b3373ffffffffffffffffffffffffffffffffffffffff16600360008360ff1660ff16815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610883576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087a90612695565b60405180910390fd5b6001808111156108bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600360008360ff1660ff16815260200190815260200160002060000160009054906101000a900460ff16600181111561091e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461095e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095590612775565b60405180910390fd5b6000600360008360ff1660ff16815260200190815260200160002060000160006101000a81548160ff021916908360018111156109c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506000600360008360ff1660ff16815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600360008360ff1660ff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff167f761e607a31d5ff6d38f57a9fc148a4d196ac9013e9cd8f982dad4920aff0deae82604051610a8c9190612830565b60405180910390a250565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1e90612795565b60405180910390fd5b600047905060008111610b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b66906127d5565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610bb5573d6000803e3d6000fd5b507f7f291eb8e4c765a8ad5598b996020d9e0ebfa5e494f102643feee90b8bbcc2ef81604051610be59190612815565b60405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff16600360008460ff1660ff16815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9190612695565b60405180910390fd5b42600360008460ff1660ff1681526020019081526020016000206001015411610cf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cef90612715565b60405180910390fd5b600460009054906101000a900460ff1660ff168160ff1610610d4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d46906127f5565b60405180910390fd5b60011515600560008360ff1660ff16815260200190815260200160002060020160009054906101000a900460ff16151514610dbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db6906127b5565b60405180910390fd5b600560008260ff1660ff16815260200190815260200160002060010154341015610e1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1590612675565b60405180910390fd5b600360008360ff1660ff168152602001908152602001600020600301600560008360ff1660ff16815260200190815260200160002090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820181600001908054610e9090612aec565b610e9b929190611c1f565b50600182015481600101556002820160009054906101000a900460ff168160020160006101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff167f1f60386be26bde4a92f16dd474fb00d5cf6354ea464636030dc88b1053c11ee4600560008460ff1660ff168152602001908152602001600020600001604051610f369190612653565b60405180910390a25050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900460ff1681565b60015481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461100f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100690612795565b60405180910390fd5b60008111611052576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611049906126d5565b60405180910390fd5b806001819055507f6b908a4de484c79df9b656714a85be1ffa1cd2a1efb1ed0f2da75c4c859723bc816040516110889190612815565b60405180910390a150565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611125576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111c90612795565b60405180910390fd5b47905090565b600460009054906101000a900460ff1681565b60603373ffffffffffffffffffffffffffffffffffffffff16600360008460ff1660ff16815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e190612695565b60405180910390fd5b600360008360ff1660ff168152602001908152602001600020600301805480602002602001604051908101604052809291908181526020016000905b8282101561130f578382906000526020600020906003020160405180606001604052908160008201805461125990612aec565b80601f016020809104026020016040519081016040528092919081815260200182805461128590612aec565b80156112d25780601f106112a7576101008083540402835291602001916112d2565b820191906000526020600020905b8154815290600101906020018083116112b557829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900460ff16151515158152505081526020019060010190611226565b505050509050919050565b600042905090565b60008111611365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135c906126f5565b60405180910390fd5b6000600360008460ff1660ff16815260200190815260200160002060020154905060008114156113955760015490505b81816113a191906129d6565b3410156113e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113da90612675565b60405180910390fd5b60008054906101000a900460ff1660ff168360ff1610611438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142f906126b5565b60405180910390fd5b42600360008560ff1660ff1681526020019081526020016000206001015411156115395760006001811115611496577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600360008560ff1660ff16815260200190815260200160002060000160009054906101000a900460ff1660018111156114f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14611538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152f90612755565b60405180910390fd5b5b6001600360008560ff1660ff16815260200190815260200160002060000160006101000a81548160ff0219169083600181111561159f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555033600360008560ff1660ff16815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600082600161160e91906129d6565b426116199190612980565b905080600360008660ff1660ff16815260200190815260200160002060010181905550600360008560ff1660ff16815260200190815260200160002060030160006116649190611cac565b61166c611cd0565b6040518060400160405280600481526020017f7374617900000000000000000000000000000000000000000000000000000000815250816000018190525034816020018181525050600360008660ff1660ff1681526020019081526020016000206003018190806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000019080519060200190611716929190611b99565b506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff167fb5fe3807fa295c9fcec2e9756db22ce2f10366f7296e8a549b3a6d1f7d56de93866040516117899190612830565b60405180910390a25050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611828576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181f90612795565b60405180910390fd5b8160008054906101000a900460ff1660ff168160ff161061187e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611875906126b5565b60405180910390fd5b42600360008360ff1660ff16815260200190815260200160002060010154111561197f57600060018111156118dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600360008360ff1660ff16815260200190815260200160002060000160009054906101000a900460ff16600181111561193e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461197e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197590612755565b60405180910390fd5b5b81600360008560ff1660ff168152602001908152602001600020600201819055507ff598869fbf7996c4577587bb1b57e9b3496dbf6ebe8a70a7e569aa0f8326ed5883836040516119d192919061287b565b60405180910390a1505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6590612795565b60405180910390fd5b600460009054906101000a900460ff1660ff168460ff1610611ac5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611abc90612735565b60405180910390fd5b82600560008660ff1660ff1681526020019081526020016000206000019080519060200190611af5929190611b99565b5081600560008660ff1660ff1681526020019081526020016000206001018190555080600560008660ff1660ff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055507f556abfd83cd680416da11476f7a84d766a6a9d9413d55819c390e1eafcbb17c7600460009054906101000a900460ff1684604051611b8b92919061284b565b60405180910390a150505050565b828054611ba590612aec565b90600052602060002090601f016020900481019282611bc75760008555611c0e565b82601f10611be057805160ff1916838001178555611c0e565b82800160010185558215611c0e579182015b82811115611c0d578251825591602001919060010190611bf2565b5b509050611c1b9190611cf3565b5090565b828054611c2b90612aec565b90600052602060002090601f016020900481019282611c4d5760008555611c9b565b82601f10611c5e5780548555611c9b565b82800160010185558215611c9b57600052602060002091601f016020900482015b82811115611c9a578254825591600101919060010190611c7f565b5b509050611ca89190611cf3565b5090565b5080546000825560030290600052602060002090810190611ccd9190611d10565b50565b604051806060016040528060608152602001600081526020016000151581525090565b5b80821115611d0c576000816000905550600101611cf4565b5090565b5b80821115611d4f5760008082016000611d2a9190611d53565b60018201600090556002820160006101000a81549060ff021916905550600301611d11565b5090565b508054611d5f90612aec565b6000825580601f10611d715750611d90565b601f016020900490600052602060002090810190611d8f9190611cf3565b5b50565b6000611da6611da1846128d5565b6128a4565b905082815260208101848484011115611dbe57600080fd5b611dc9848285612aaa565b509392505050565b600081359050611de081612c29565b92915050565b600082601f830112611df757600080fd5b8135611e07848260208601611d93565b91505092915050565b600081359050611e1f81612c40565b92915050565b600081359050611e3481612c57565b92915050565b60008060408385031215611e4d57600080fd5b600083013567ffffffffffffffff811115611e6757600080fd5b611e7385828601611de6565b9250506020611e8485828601611e10565b9150509250929050565b600060208284031215611ea057600080fd5b6000611eae84828501611e10565b91505092915050565b600060208284031215611ec957600080fd5b6000611ed784828501611e25565b91505092915050565b60008060008060808587031215611ef657600080fd5b6000611f0487828801611e25565b945050602085013567ffffffffffffffff811115611f2157600080fd5b611f2d87828801611de6565b9350506040611f3e87828801611e10565b9250506060611f4f87828801611dd1565b91505092959194509250565b60008060408385031215611f6e57600080fd5b6000611f7c85828601611e25565b9250506020611f8d85828601611e10565b9150509250929050565b60008060408385031215611faa57600080fd5b6000611fb885828601611e25565b9250506020611fc985828601611e25565b9150509250929050565b6000611fdf8383612516565b905092915050565b611ff081612a30565b82525050565b60006120018261292a565b61200b818561294d565b93508360208202850161201d85612905565b8060005b85811015612059578484038952815161203a8582611fd3565b945061204583612940565b925060208a01995050600181019050612021565b50829750879550505050505092915050565b61207481612a42565b82525050565b61208381612a42565b82525050565b61209281612a98565b82525050565b60006120a382612935565b6120ad818561295e565b93506120bd818560208601612ab9565b6120c681612c04565b840191505092915050565b60006120dc82612935565b6120e6818561296f565b93506120f6818560208601612ab9565b6120ff81612c04565b840191505092915050565b6000815461211781612aec565b612121818661296f565b9450600182166000811461213c576001811461214e57612181565b60ff1983168652602086019350612181565b61215785612915565b60005b838110156121795781548189015260018201915060208101905061215a565b808801955050505b50505092915050565b600061219760108361296f565b91507f4e6f7420656e6f756768206d6f6e6579000000000000000000000000000000006000830152602082019050919050565b60006121d760178361296f565b91507f796f7520617265206e6f7420696e2074686520726f6f6d0000000000000000006000830152602082019050919050565b600061221760198361296f565b91507f5468697320726f6f6d20646f6573206e6f7420657869737473000000000000006000830152602082019050919050565b6000612257601b8361296f565b91507f4d6f6e657920646f65736e27742067726f77206f6e20747265657300000000006000830152602082019050919050565b600061229760248361296f565b91507f596f75206861766520746f2073746179206174206c65617374206f6e6520706560008301527f72696f64000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006122fd60288361296f565b91507f596f75722074696d65206973206f7665722c20706c65617365206c656176652060008301527f74686520726f6f6d0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612363601c8361296f565b91507f54686973207365727669636520646f6573206e6f7420657869737473000000006000830152602082019050919050565b60006123a360158361296f565b91507f5468697320726f6f6d206973206f6363757069656400000000000000000000006000830152602082019050919050565b60006123e360198361296f565b91507f5468697320726f6f6d206973206e6f74206f63637570696564000000000000006000830152602082019050919050565b600061242360098361296f565b91507f4e6f74206f776e657200000000000000000000000000000000000000000000006000830152602082019050919050565b6000612463601b8361296f565b91507f54686973207365727669636520697320756e617661696c61626c6500000000006000830152602082019050919050565b60006124a360138361296f565b91507f49276d2062726f6b652c20736f7272792e2e2e000000000000000000000000006000830152602082019050919050565b60006124e360198361296f565b91507f54686973206974656d20646f6573206e6f7420657869737473000000000000006000830152602082019050919050565b600060608301600083015184820360008601526125338282612098565b91505060208301516125486020860182612566565b50604083015161255b604086018261206b565b508091505092915050565b61256f81612a81565b82525050565b61257e81612a81565b82525050565b61258d81612a8b565b82525050565b60006020820190506125a86000830184611fe7565b92915050565b600060208201905081810360008301526125c88184611ff6565b905092915050565b60006080820190506125e56000830187612089565b6125f26020830186611fe7565b6125ff6040830185612575565b61260c6060830184612575565b95945050505050565b6000606082019050818103600083015261262f81866120d1565b905061263e6020830185612575565b61264b604083018461207a565b949350505050565b6000602082019050818103600083015261266d818461210a565b905092915050565b6000602082019050818103600083015261268e8161218a565b9050919050565b600060208201905081810360008301526126ae816121ca565b9050919050565b600060208201905081810360008301526126ce8161220a565b9050919050565b600060208201905081810360008301526126ee8161224a565b9050919050565b6000602082019050818103600083015261270e8161228a565b9050919050565b6000602082019050818103600083015261272e816122f0565b9050919050565b6000602082019050818103600083015261274e81612356565b9050919050565b6000602082019050818103600083015261276e81612396565b9050919050565b6000602082019050818103600083015261278e816123d6565b9050919050565b600060208201905081810360008301526127ae81612416565b9050919050565b600060208201905081810360008301526127ce81612456565b9050919050565b600060208201905081810360008301526127ee81612496565b9050919050565b6000602082019050818103600083015261280e816124d6565b9050919050565b600060208201905061282a6000830184612575565b92915050565b60006020820190506128456000830184612584565b92915050565b60006040820190506128606000830185612584565b818103602083015261287281846120d1565b90509392505050565b60006040820190506128906000830185612584565b61289d6020830184612575565b9392505050565b6000604051905081810181811067ffffffffffffffff821117156128cb576128ca612bd5565b5b8060405250919050565b600067ffffffffffffffff8211156128f0576128ef612bd5565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061298b82612a81565b915061299683612a81565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156129cb576129ca612b48565b5b828201905092915050565b60006129e182612a81565b91506129ec83612a81565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612a2557612a24612b48565b5b828202905092915050565b6000612a3b82612a61565b9050919050565b60008115159050919050565b6000819050612a5c82612c15565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000612aa382612a4e565b9050919050565b82818337600083830152505050565b60005b83811015612ad7578082015181840152602081019050612abc565b83811115612ae6576000848401525b50505050565b60006002820490506001821680612b0457607f821691505b60208210811415612b1857612b17612ba6565b5b50919050565b6000612b2982612a8b565b915060ff821415612b3d57612b3c612b48565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60028110612c2657612c25612b77565b5b50565b612c3281612a42565b8114612c3d57600080fd5b50565b612c4981612a81565b8114612c5457600080fd5b50565b612c6081612a8b565b8114612c6b57600080fd5b5056fea26469706673582212206cfe6e225fde3908480a4ba88053b666a11e231cf470533f2968f01d91c1353464736f6c63430008000033",
  "devdoc": {
    "author": "ricardo85x",
    "details": "allow users to rent a room in the dApp Inn. ",
    "kind": "dev",
    "methods": {
      "addRoomService(string,uint256)": {
        "details": "add a service so guest can buy it."
      },
      "balance()": {
        "returns": {
          "_0": "the balance in this smart contract."
        }
      },
      "checkOut(uint8)": {
        "details": "no money back!"
      },
      "constructor": {
        "details": "consider using openzeppelin Owener contract"
      },
      "getRoomTab(uint8)": {
        "details": "I could not directly use rooms[num].tab from etherjs So I created this function.",
        "returns": {
          "_0": "rooms'tab."
        }
      },
      "getTimeStamp()": {
        "returns": {
          "_0": "current timestamp."
        }
      },
      "setNumberOfRooms(uint8)": {
        "details": "please verifify manualy if the room is empty before continue."
      },
      "setRoomPrice(uint8,uint256)": {
        "details": "set price to zero when you want to use defaultRoomPriceInWei."
      },
      "updateRoomService(uint8,string,uint256,bool)": {
        "details": "update a service."
      }
    },
    "title": "Dapp Inn ",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "buyRoomService(uint8,uint8)": {
        "notice": "buy a service to make your stay more happy."
      },
      "checkIn(uint8,uint256)": {
        "notice": "check in the room."
      },
      "checkOut(uint8)": {
        "notice": "checkout the user before the checkoutDate."
      },
      "setDefaultRoomPrice(uint256)": {
        "notice": "set the defaut room price."
      },
      "setNumberOfRooms(uint8)": {
        "notice": "set the number of rooms available to rent."
      },
      "setRoomPrice(uint8,uint256)": {
        "notice": "set Rooms price."
      },
      "withdrawAll()": {
        "notice": "withdraw all funds."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/DappInn.sol:DappInn",
        "label": "numberOfRooms",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 11,
        "contract": "contracts/DappInn.sol:DappInn",
        "label": "defaultRoomPriceInWei",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 13,
        "contract": "contracts/DappInn.sol:DappInn",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 32,
        "contract": "contracts/DappInn.sol:DappInn",
        "label": "rooms",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint8,t_struct(Room)27_storage)"
      },
      {
        "astId": 41,
        "contract": "contracts/DappInn.sol:DappInn",
        "label": "numberOfServices",
        "offset": 0,
        "slot": "4",
        "type": "t_uint8"
      },
      {
        "astId": 46,
        "contract": "contracts/DappInn.sol:DappInn",
        "label": "roomService",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint8,t_struct(RoomService)39_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(RoomService)39_storage)dyn_storage": {
        "base": "t_struct(RoomService)39_storage",
        "encoding": "dynamic_array",
        "label": "struct DappInn.RoomService[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(RoomStatus)5": {
        "encoding": "inplace",
        "label": "enum DappInn.RoomStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint8,t_struct(Room)27_storage)": {
        "encoding": "mapping",
        "key": "t_uint8",
        "label": "mapping(uint8 => struct DappInn.Room)",
        "numberOfBytes": "32",
        "value": "t_struct(Room)27_storage"
      },
      "t_mapping(t_uint8,t_struct(RoomService)39_storage)": {
        "encoding": "mapping",
        "key": "t_uint8",
        "label": "mapping(uint8 => struct DappInn.RoomService)",
        "numberOfBytes": "32",
        "value": "t_struct(RoomService)39_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Room)27_storage": {
        "encoding": "inplace",
        "label": "struct DappInn.Room",
        "members": [
          {
            "astId": 16,
            "contract": "contracts/DappInn.sol:DappInn",
            "label": "status",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(RoomStatus)5"
          },
          {
            "astId": 18,
            "contract": "contracts/DappInn.sol:DappInn",
            "label": "guest",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 20,
            "contract": "contracts/DappInn.sol:DappInn",
            "label": "checkoutDate",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 22,
            "contract": "contracts/DappInn.sol:DappInn",
            "label": "price",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 26,
            "contract": "contracts/DappInn.sol:DappInn",
            "label": "tab",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(RoomService)39_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(RoomService)39_storage": {
        "encoding": "inplace",
        "label": "struct DappInn.RoomService",
        "members": [
          {
            "astId": 34,
            "contract": "contracts/DappInn.sol:DappInn",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 36,
            "contract": "contracts/DappInn.sol:DappInn",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 38,
            "contract": "contracts/DappInn.sol:DappInn",
            "label": "enabled",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}